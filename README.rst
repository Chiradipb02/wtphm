wtphm
*****

The **W**\ind **T**\urbine **P**\rognostics and **H**\ealth **M**\anagement library
processes wind turbine events (also called alarms or status) data, as well as
operational SCADA data (the usually 10-minute data coming off of wind turbines).

The main aim of the package is to process raw turbine alarm data to identify
periods of downtime, or different modes of operation (e.g. gird-related curtailment),
and relate these back to the SCADA data. This data can then be used for reliability
analyses or testing predictive maintenance algorithms.

Although there are commercial packages that can perform this task, this library
aims to be an open-source alternative for use by the research community.
It was borne out of my own work for trying to process data for use in my PhD -
hopefully this will allow other researchers to get into analysis quicker.

Broad Functions of Package
==========================

The three main parts of the package are the ``batch`` and ``classification``
modules, as well as the ``clustering`` subpackage.

Groups of related alarms as they appear during stoppages are called "batches",
and ``batch`` contains the functions for creating these and assigning a high-level
reason for the stoppage from the events and scada data. More information on the
batches and the process behind creating them can be found in [1].

``classification`` contains functions for labelling SCADA data based on the
batches, for purposes of classification.

``clustering`` deals with clustering together different similar
alarm sequences, explored in [3]. This part of the library, `wtphm.clustering`
isn't updated as much as the others - development may be needed in some parts.

Information and critiques on some of the issues surrounding the data coming from
wind turbines more generally can be found in [2].

Please raise issues here on GitHub for any issues encountered.

Overview of Data
================
The data manipulated in this library is turbine ``events`` data and ``scada``
data.

Event Data
----------

The ``event_data`` is related to any fault or information messages generated by
the turbine. This is instantaneous, and records information like faults that have
occurred, or status messages like low- or no- wind, or turbine shutting down due
to storm winds.

The data must have the following column headers:
* ``turbine_num``: The turbine the data applies to.
* ``code``: There are a set list of events which can occur on the
  turbine. Each one of these has an event code.
* ``description``: Each event code also has an associated description
* ``time_on``: The start time of the event
* ``time_off``: The end time of the event
* ``duration``: The duration of the event (can be calculated from )

In addition, there must be a specific event ``code`` which
signifies return to normal operation after any downtime or abnormal operating
period.

SCADA/Operational data
----------------------

The ``scada_data`` is typically recorded in 10-minute intervals and has attributes like
average power output, maximum, minimum and average windspeeds, etc. over the previous
10-minute period.

For the purposes



User Guide and Usage Examples
=============================
See the examples/wtphm_readme_examples.ipynb notebook!.

Documentation
=============
Documentation can be found `here <https://wtphm.readthedocs.io/en/latest/>`_. For
a local copy of the docs, see docs/_build/index.html.


References
==========
[1] Leahy, Kevin, et al. "A robust prescriptive framework and performance metric
for diagnosing and predicting wind turbine faults based on SCADA and alarms data
with case study." Energies 11.7 (2018): 1738.

[2] Leahy, Kevin, et al. "Issues with data quality for wind turbine condition
monitoring and reliability analyses." Energies 12.2 (2019): 201.

[3] Leahy, Kevin, et al. "Cluster analysis of wind turbine alarms for
characterising and classifying stoppages." IET Renewable Power Generation 12.10 (2018): 1146-1154.
